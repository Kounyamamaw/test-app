"""
MIGRATION - Ajout du syst√®me d'approbation
Adapt√© pour trading_app.db et le mod√®le User existant
"""

import sqlite3
import os

def migrate_database():
    """Ajoute la colonne is_approved √† la table user"""
    
    # Chemin de ta base de donn√©es
    db_path = './instance/trading_app.db'
    
    if not os.path.exists(db_path):
        print("‚ùå Base de donn√©es non trouv√©e!")
        print(f"   Chemin attendu: {os.path.abspath(db_path)}")
        print("\nüí° Solution: Lance d'abord ton app.py pour cr√©er la base:")
        print("   python app.py")
        return False
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # V√©rifier si la colonne existe d√©j√†
        cursor.execute("PRAGMA table_info(user)")
        columns = [col[1] for col in cursor.fetchall()]
        
        print(f"üìä Colonnes actuelles: {columns}")
        
        if 'is_approved' in columns:
            print("‚úÖ La colonne 'is_approved' existe d√©j√†!")
            conn.close()
            return True
        
        # Ajouter la colonne
        print("\nüìù Ajout de la colonne 'is_approved'...")
        cursor.execute("""
            ALTER TABLE user 
            ADD COLUMN is_approved BOOLEAN DEFAULT 0
        """)
        
        # Approuver automatiquement tous les comptes existants
        print("üîì Approbation automatique des comptes existants...")
        cursor.execute("""
            UPDATE user 
            SET is_approved = 1
        """)
        
        conn.commit()
        
        # V√©rifier le r√©sultat
        cursor.execute("SELECT username, is_approved FROM user")
        users = cursor.fetchall()
        
        print(f"\n‚úÖ Migration r√©ussie !")
        print(f"   {len(users)} compte(s) approuv√©(s) automatiquement:")
        for username, approved in users:
            status = "‚úÖ" if approved else "‚ùå"
            print(f"   {status} {username}")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la migration: {e}")
        return False

if __name__ == "__main__":
    print("="*60)
    print("üîß MIGRATION - Syst√®me d'approbation")
    print("   Base de donn√©es: trading_app.db")
    print("="*60)
    print()
    
    success = migrate_database()
    
    if success:
        print("\n" + "="*60)
        print("üéâ Migration termin√©e avec succ√®s!")
        print("="*60)
        print("\nüìã Prochaines √©tapes:")
        print("   1. Remplace app.py par app_UPDATED.py")
        print("   2. Remplace templates/admin.html par admin_UPDATED.html")
        print("   3. Red√©marre l'application")
        print("   4. Va sur /admin pour voir les nouveaut√©s")
        print()
    else:
        print("\n‚ùå La migration a √©chou√©.")
        print("   Assure-toi que l'app a √©t√© lanc√©e au moins une fois.")
        print()
